name: 🚀 Release APK

on:
  push:
    tags:
      - "v*.*.*"  # Runs only when pushing a tag like v1.0.0

jobs:
  lint:
    name: 🔍 Validate Code & Setup
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v5

      - name: ✅ Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: 🏗️ Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle

      - name: 🧼 Run Spotless Check
        run: ./gradlew spotlessCheck --init-script gradle/init.gradle.kts --no-configuration-cache

  build:
    name: 🏗️ Build Signed APK
    needs: lint  # Runs only if lint passes ✅
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v5

      - name: ✅ Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: 🏗️ Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle

      - name: 📜 Set up Google Services
        run: |
          touch app/google-services.json
          echo "${CONTENT// /}" | base64 --decode > app/google-services.json
        env:
          CONTENT: ${{ secrets.GOOGLE_SERVICES }}

      - name: 🔑 Set up Signing Key
        run: |
          touch app/key.jks
          echo "${KEYSTORE// /}" | base64 --decode > app/key.jks
          touch keystore.properties
          echo "${KEYSTORE_PROPERTIES// /}" | base64 --decode > keystore.properties
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
          KEYSTORE_PROPERTIES: ${{ secrets.KEYSTORE_PROPERTIES }}

      - name: 🔐 Set up Local Properties
        run: |
          touch local.properties
          echo "GOOGLE_WEB_CLIENT_ID=$GOOGLE_WEB_CLIENT_ID" >> local.properties
        env:
          GOOGLE_WEB_CLIENT_ID: ${{ secrets.GOOGLE_WEB_CLIENT_ID }}

      - name: 🧹 Clean Project
        run: ./gradlew clean

      - name: 🔨 Build Release APK
        run: ./gradlew assembleRelease

      - name: 📦 Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk
          retention-days: 30

  github-release:
    name: 📋 Create GitHub Release
    needs: build  # Runs only if the APK build is successful ✅
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v5

      - name: 📦 Download APK Artifact
        uses: actions/download-artifact@v5
        with:
          name: release-apk
          path: ./apk

      - name: 📝 Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: CHANGELOG.md
          files: ./apk/*.apk

  play-store-release:
    name: ☁️ Deploy to Play Store
    needs: build  # Runs only if the APK build is successful ✅
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v5

      - name: 🏗️ Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'
          cache: gradle

      - name: 💎 Setup Ruby & Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: 📜 Set up Google Services
        run: |
          touch app/google-services.json
          echo "${CONTENT// /}" | base64 --decode > app/google-services.json
        env:
          CONTENT: ${{ secrets.GOOGLE_SERVICES }}

      - name: 🔑 Set up Signing Key
        run: |
          touch app/key.jks
          echo "${KEYSTORE// /}" | base64 --decode > app/key.jks
          touch keystore.properties
          echo "${KEYSTORE_PROPERTIES// /}" | base64 --decode > keystore.properties
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
          KEYSTORE_PROPERTIES: ${{ secrets.KEYSTORE_PROPERTIES }}

      - name: 🔐 Set up Local Properties
        run: |
          touch local.properties
          echo "GOOGLE_WEB_CLIENT_ID=$GOOGLE_WEB_CLIENT_ID" >> local.properties
        env:
          GOOGLE_WEB_CLIENT_ID: ${{ secrets.GOOGLE_WEB_CLIENT_ID }}

      - name: ☁️ Upload to Play Store
        run: |
          echo "${PLAY_STORE_JSON// /}" | base64 --decode > fastlane/play-store.json
          bundle exec fastlane android deploy
        env:
          PLAY_STORE_JSON: ${{ secrets.PLAY_STORE_JSON }}